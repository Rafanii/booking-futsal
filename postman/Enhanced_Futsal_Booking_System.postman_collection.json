{
  "info": {
    "name": "Enhanced Futsal Booking System - Comprehensive API Testing",
    "description": "Comprehensive Postman collection untuk testing enhanced futsal booking system dengan 6-role architecture dan backward compatibility",
    "version": "2.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{auth_token}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-refresh token if expired",
          "const token = pm.environment.get('auth_token');",
          "if (token) {",
          "  const tokenData = JSON.parse(atob(token.split('.')[1]));",
          "  const currentTime = Math.floor(Date.now() / 1000);",
          "  if (tokenData.exp < currentTime) {",
          "    console.log('Token expired, need to refresh');",
          "    pm.environment.set('token_expired', 'true');",
          "  }",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "{{base_url}}",
      "type": "string"
    },
    {
      "key": "auth_token",
      "value": "{{auth_token}}",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "🔧 Environment Setup",
      "item": [
        {
          "name": "Check API Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/",
              "host": ["{{base_url}}"],
              "path": [""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('API is running', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.version).to.eql('2.0.0');",
                  "    pm.expect(response.enhanced_role_system).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Available Routes",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/routes",
              "host": ["{{base_url}}"],
              "path": ["api", "routes"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Routes documentation available', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data).to.have.property('authentication');",
                  "    pm.expect(response.data).to.have.property('public');",
                  "    pm.expect(response.data).to.have.property('customer');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Role Permissions",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/permissions",
              "host": ["{{base_url}}"],
              "path": ["api", "permissions"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Role permissions available', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.data.role_hierarchy).to.have.property('pengunjung');",
                  "    pm.expect(response.data.role_hierarchy).to.have.property('penyewa');",
                  "    pm.expect(response.data.role_hierarchy).to.have.property('staff_kasir');",
                  "    pm.expect(response.data.role_hierarchy).to.have.property('operator_lapangan');",
                  "    pm.expect(response.data.role_hierarchy).to.have.property('manajer_futsal');",
                  "    pm.expect(response.data.role_hierarchy).to.have.property('supervisor_sistem');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "🔐 Authentication",
      "item": [
        {
          "name": "Register New User (Default: Penyewa)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Customer\",\n  \"email\": \"customer@test.com\",\n  \"password\": \"password123\",\n  \"phone\": \"081234567890\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('User registration successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data.user.role).to.eql('penyewa');",
                  "    pm.expect(response.data).to.have.property('token');",
                  "    pm.environment.set('auth_token', response.data.token);",
                  "    pm.environment.set('user_id', response.data.user.id);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Login User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"customer@test.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Login successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data).to.have.property('token');",
                  "    pm.environment.set('auth_token', response.data.token);",
                  "    pm.environment.set('user_id', response.data.user.id);",
                  "    pm.environment.set('user_role', response.data.user.role);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get User Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/auth/profile",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "profile"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Profile retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data).to.have.property('id');",
                  "    pm.expect(response.data).to.have.property('role');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/auth/refresh",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "refresh"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Token refreshed successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data).to.have.property('token');",
                  "    pm.environment.set('auth_token', response.data.token);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Logout User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "logout"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Logout successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.environment.unset('auth_token');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "🌐 Public Endpoints (Guest Access)",
      "item": [
        {
          "name": "Get System Info",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/public/system-info",
              "host": ["{{base_url}}"],
              "path": ["api", "public", "system-info"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('System info retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Public Fields",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/public/fields?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "public", "fields"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Public fields retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    if (response.data.fields && response.data.fields.length > 0) {",
                  "        pm.environment.set('field_id', response.data.fields[0].id);",
                  "    }",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Field Detail",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/public/fields/{{field_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "public", "fields", "{{field_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Field detail retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data).to.have.property('id');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Field Availability",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/public/fields/{{field_id}}/availability?date={{$isoTimestamp}}",
              "host": ["{{base_url}}"],
              "path": ["api", "public", "fields", "{{field_id}}", "availability"],
              "query": [
                {
                  "key": "date",
                  "value": "{{$isoTimestamp}}"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Field availability retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Field Types",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/public/field-types",
              "host": ["{{base_url}}"],
              "path": ["api", "public", "field-types"]
            }
          }
        },
        {
          "name": "Get Field Locations",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/public/field-locations",
              "host": ["{{base_url}}"],
              "path": ["api", "public", "field-locations"]
            }
          }
        },
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/public/health",
              "host": ["{{base_url}}"],
              "path": ["api", "public", "health"]
            }
          }
        }
      ]
    },
    {
      "name": "👤 Customer/Penyewa Endpoints",
      "item": [
        {
          "name": "Get Customer Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/customer/profile",
              "host": ["{{base_url}}"],
              "path": ["api", "customer", "profile"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Customer profile retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data).to.have.property('id');",
                  "    pm.expect(response.data.role).to.eql('penyewa');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Customer Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Customer Name\",\n  \"phone\": \"081234567891\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/customer/profile",
              "host": ["{{base_url}}"],
              "path": ["api", "customer", "profile"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Customer profile updated', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Available Fields for Customer",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/customer/fields?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "customer", "fields"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Customer fields retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Create Booking",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"field_id\": \"{{field_id}}\",\n  \"booking_date\": \"2024-12-20\",\n  \"start_time\": \"10:00\",\n  \"end_time\": \"12:00\",\n  \"notes\": \"Test booking from Postman\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/customer/bookings",
              "host": ["{{base_url}}"],
              "path": ["api", "customer", "bookings"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Booking created successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data).to.have.property('id');",
                  "    pm.environment.set('booking_id', response.data.id);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Customer Bookings",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/customer/bookings?page=1&limit=10&status=all",
              "host": ["{{base_url}}"],
              "path": ["api", "customer", "bookings"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "status",
                  "value": "all"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Customer bookings retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Booking Detail",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/customer/bookings/{{booking_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "customer", "bookings", "{{booking_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Booking detail retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data).to.have.property('id');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Cancel Booking",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"cancellation_reason\": \"Test cancellation from Postman\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/customer/bookings/{{booking_id}}/cancel",
              "host": ["{{base_url}}"],
              "path": ["api", "customer", "bookings", "{{booking_id}}", "cancel"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Booking cancelled successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Customer Dashboard",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/customer/dashboard",
              "host": ["{{base_url}}"],
              "path": ["api", "customer", "dashboard"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Customer dashboard retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "💰 Staff Kasir Endpoints",
      "item": [
        {
          "name": "Get Kasir Dashboard",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/staff/kasir/dashboard",
              "host": ["{{base_url}}"],
              "path": ["api", "staff", "kasir", "dashboard"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Kasir dashboard retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get All Payments",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/staff/kasir/payments?page=1&limit=10&status=all",
              "host": ["{{base_url}}"],
              "path": ["api", "staff", "kasir", "payments"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "status",
                  "value": "all"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Payments retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    if (response.data.payments && response.data.payments.length > 0) {",
                  "        pm.environment.set('payment_id', response.data.payments[0].id);",
                  "    }",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Pending Payments",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/staff/kasir/payments/pending",
              "host": ["{{base_url}}"],
              "path": ["api", "staff", "kasir", "payments", "pending"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Pending payments retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Payment Detail",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/staff/kasir/payments/{{payment_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "staff", "kasir", "payments", "{{payment_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Payment detail retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data).to.have.property('id');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Process Manual Payment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"booking_id\": \"{{booking_id}}\",\n  \"amount\": 100000,\n  \"payment_method\": \"cash\",\n  \"notes\": \"Manual cash payment processed by kasir\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/staff/kasir/payments/manual",
              "host": ["{{base_url}}"],
              "path": ["api", "staff", "kasir", "payments", "manual"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Manual payment processed', function () {",
                  "    pm.response.to.have.status(201);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data).to.have.property('id');",
                  "    pm.environment.set('payment_id', response.data.id);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Confirm Payment",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"confirmation_notes\": \"Payment confirmed by kasir\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/staff/kasir/payments/{{payment_id}}/confirm",
              "host": ["{{base_url}}"],
              "path": ["api", "staff", "kasir", "payments", "{{payment_id}}", "confirm"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Payment confirmed', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Payment Statistics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/staff/kasir/statistics?period=daily",
              "host": ["{{base_url}}"],
              "path": ["api", "staff", "kasir", "statistics"],
              "query": [
                {
                  "key": "period",
                  "value": "daily"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Payment statistics retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Daily Cash Report",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/staff/kasir/daily-report?date={{$isoTimestamp}}",
              "host": ["{{base_url}}"],
              "path": ["api", "staff", "kasir", "daily-report"],
              "query": [
                {
                  "key": "date",
                  "value": "{{$isoTimestamp}}"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Daily cash report retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "⚽ Staff Operator Endpoints",
      "item": [
        {
          "name": "Get Operator Dashboard",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/staff/operator/dashboard",
              "host": ["{{base_url}}"],
              "path": ["api", "staff", "operator", "dashboard"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Operator dashboard retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Assigned Fields",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/staff/operator/fields",
              "host": ["{{base_url}}"],
              "path": ["api", "staff", "operator", "fields"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Assigned fields retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Field Status",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"maintenance\",\n  \"notes\": \"Field under maintenance by operator\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/staff/operator/fields/{{field_id}}/status",
              "host": ["{{base_url}}"],
              "path": ["api", "staff", "operator", "fields", "{{field_id}}", "status"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Field status updated', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Field Bookings",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/staff/operator/fields/{{field_id}}/bookings?date={{$isoTimestamp}}",
              "host": ["{{base_url}}"],
              "path": ["api", "staff", "operator", "fields", "{{field_id}}", "bookings"],
              "query": [
                {
                  "key": "date",
                  "value": "{{$isoTimestamp}}"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Field bookings retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Today Schedule",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/staff/operator/schedule/today",
              "host": ["{{base_url}}"],
              "path": ["api", "staff", "operator", "schedule", "today"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Today schedule retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Confirm Booking",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"confirmation_notes\": \"Booking confirmed by operator\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/staff/operator/bookings/{{booking_id}}/confirm",
              "host": ["{{base_url}}"],
              "path": ["api", "staff", "operator", "bookings", "{{booking_id}}", "confirm"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Booking confirmed by operator', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Complete Booking",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"completion_notes\": \"Booking completed successfully\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/staff/operator/bookings/{{booking_id}}/complete",
              "host": ["{{base_url}}"],
              "path": ["api", "staff", "operator", "bookings", "{{booking_id}}", "complete"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Booking completed by operator', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Operator Statistics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/staff/operator/statistics?period=weekly",
              "host": ["{{base_url}}"],
              "path": ["api", "staff", "operator", "statistics"],
              "query": [
                {
                  "key": "period",
                  "value": "weekly"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Operator statistics retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "🏢 Staff Manager Endpoints",
      "item": [
        {
          "name": "Get Manager Dashboard",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/staff/manager/dashboard",
              "host": ["{{base_url}}"],
              "path": ["api", "staff", "manager", "dashboard"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Manager dashboard retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get All Users for Management",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/staff/manager/users?page=1&limit=10&role=all",
              "host": ["{{base_url}}"],
              "path": ["api", "staff", "manager", "users"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "role",
                  "value": "all"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Users for management retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Update User Role",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"new_role\": \"staff_kasir\",\n  \"reason\": \"Promotion to kasir position\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/staff/manager/users/{{user_id}}/role",
              "host": ["{{base_url}}"],
              "path": ["api", "staff", "manager", "users", "{{user_id}}", "role"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('User role updated by manager', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Update User Status",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"is_active\": false,\n  \"reason\": \"Temporary suspension\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/staff/manager/users/{{user_id}}/status",
              "host": ["{{base_url}}"],
              "path": ["api", "staff", "manager", "users", "{{user_id}}", "status"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('User status updated by manager', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get All Fields for Management",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/staff/manager/fields?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "staff", "manager", "fields"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Fields for management retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Create New Field",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Lapangan Test Manager\",\n  \"type\": \"futsal\",\n  \"location\": \"Indoor\",\n  \"price_per_hour\": 150000,\n  \"description\": \"Field created by manager for testing\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/staff/manager/fields",
              "host": ["{{base_url}}"],
              "path": ["api", "staff", "manager", "fields"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('New field created by manager', function () {",
                  "    pm.response.to.have.status(201);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data).to.have.property('id');",
                  "    pm.environment.set('new_field_id', response.data.id);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Field",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Lapangan Test Manager Updated\",\n  \"price_per_hour\": 175000,\n  \"description\": \"Field updated by manager\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/staff/manager/fields/{{new_field_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "staff", "manager", "fields", "{{new_field_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Field updated by manager', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Business Analytics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/staff/manager/analytics?period=monthly&date_from=2024-01-01&date_to=2024-12-31",
              "host": ["{{base_url}}"],
              "path": ["api", "staff", "manager", "analytics"],
              "query": [
                {
                  "key": "period",
                  "value": "monthly"
                },
                {
                  "key": "date_from",
                  "value": "2024-01-01"
                },
                {
                  "key": "date_to",
                  "value": "2024-12-31"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Business analytics retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}
